name: Build Project Matrixx for tapas (Clean Extraction)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      DEVICE: tapas
      ROM_BRANCH: 15.0
      WITH_GMS: false
      FW_URL: https://bn.d.miui.com/OS2.0.12.0.VMTMIXM/tapas_global_images_OS2.0.12.0.VMTMIXM_20250523.0000.00_15.0_global_c36b8ae07a.tgz

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Install build & extract dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jdk git-core gnupg flex bison gperf build-essential \
            zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev \
            x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip \
            fontconfig lzop ccache schedtool repo libssl-dev bc python3 python3-pip \
            simg2img lz4 squashfs-tools p7zip-full mount parted e2fsprogs

      - name: Init Project Matrixx
        run: |
          mkdir matrixx && cd matrixx
          repo init -u https://github.com/ProjectMatrixx/android.git -b $ROM_BRANCH --git-lfs
          repo sync -c --no-clone-bundle --optimized-fetch --prune --force-sync -j$(nproc)

      - name: Download Stock Firmware
        run: |
          cd matrixx
          wget $FW_URL -O firmware.tgz
          mkdir firmware && tar -xzf firmware.tgz -C firmware

      - name: Extract vendor blobs from firmware
        run: |
          cd matrixx
          mkdir -p vendor/xiaomi/$DEVICE/proprietary
          VENDOR_IMG=$(find firmware -name "vendor.img" | head -n 1)
          SYSTEM_IMG=$(find firmware -name "system.img" | head -n 1)
          PRODUCT_IMG=$(find firmware -name "product.img" | head -n 1)
          simg2img "$VENDOR_IMG" vendor.raw.img
          simg2img "$SYSTEM_IMG" system.raw.img
          simg2img "$PRODUCT_IMG" product.raw.img
          mkdir -p mnt/vendor mnt/system mnt/product
          sudo mount -o loop vendor.raw.img mnt/vendor
          sudo mount -o loop system.raw.img mnt/system
          sudo mount -o loop product.raw.img mnt/product
          cp -r mnt/vendor/* vendor/xiaomi/$DEVICE/proprietary/ || true
          cp -r mnt/system/vendor/* vendor/xiaomi/$DEVICE/proprietary/ || true
          cp -r mnt/product/vendor/* vendor/xiaomi/$DEVICE/proprietary/ || true
          sudo umount mnt/vendor || true
          sudo umount mnt/system || true
          sudo umount mnt/product || true
          rm -rf mnt vendor.raw.img system.raw.img product.raw.img

      - name: Add minimal device tree
        run: |
          cd matrixx
          mkdir -p device/xiaomi/$DEVICE
          cat > device/xiaomi/$DEVICE/AndroidProducts.mk <<EOF
          PRODUCT_MAKEFILES := \$(LOCAL_DIR)/projectmatrixx_$DEVICE.mk
          COMMON_LUNCH_CHOICES := projectmatrixx_$DEVICE-userdebug
          EOF
          cat > device/xiaomi/$DEVICE/projectmatrixx_$DEVICE.mk <<EOF
          $(echo '$(call inherit-product, vendor/xiaomi/'$DEVICE'/proprietary/vendor.mk)')
          PRODUCT_NAME := projectmatrixx_$DEVICE
          PRODUCT_DEVICE := $DEVICE
          PRODUCT_BRAND := Xiaomi
          PRODUCT_MODEL := Redmi Note 12 4G
          PRODUCT_MANUFACTURER := Xiaomi
          EOF

      - name: Setup build environment
        run: |
          cd matrixx
          . build/envsetup.sh
          lunch projectmatrixx_${DEVICE}-userdebug

      - name: Build ROM
        run: |
          cd matrixx
          brunch $DEVICE WITH_GMS=${WITH_GMS}

      - name: Upload ROM artifact
        uses: actions/upload-artifact@v3
        with:
          name: ProjectMatrixx_${{ env.DEVICE }}_${{ github.run_number }}
          path: matrixx/out/target/product/${{ env.DEVICE }}/*.zip
